{"version":3,"sources":["assets/noPosterSmall.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Logo.js","Components/Trailer.js","Components/Credit.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Conatiner","styled","div","Title","span","Grid","Section","title","children","Container","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","HomePresenter","nowPlaying","popular","upComing","error","loading","Helmet","Loader","length","map","movie","key","poster_path","original_title","vote_average","release_date","substring","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","From","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","Logo","company","logo_path","protoTypes","PropTypes","object","isRequired","Video","iframe","Trailer","video","src","allowFullScreen","ActorImg","bgImage","ActorName","CharacterName","Actor","Credit","actor","profile_path","name","console","log","character","Backdrop","Content","Cover","Data","TitleAndLinkContainer","h3","IMDBLink","ItemContainer","Item","Divider","Overview","p","LogoContainer","VideoContainer","VideosContainer","ActorsContainer","DetailPresenter","result","credits","backdrop_path","href","imdb_id","runtime","episode_run_time","genres","genre","index","production_companies","filter","overview","cast","videos","DetailContainer","pathname","location","includes","match","push","history","parsedId","parseInt","isNaN","Header","header","List","ul","li","current","SLink","Link","withRouter","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eb86e6a1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Conatiner = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 22px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 230px);\n  grid-gap: 30px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Conatiner>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Conatiner>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nexport default Section;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 100px;\n  margin-top: 20px;\n`;\n\nexport default () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ⏰\n    </span>\n  </Container>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\nconst Text = styled.span`\n  color: ${(props) => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${(props) => props.bgUrl});\n  height: 300px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.2s linear;\n`;\n\nconst Rating = styled.span`\n  position: absolute;\n  bottom: 5px;\n  right: 5px;\n  opacity: 0;\n  transition: opacity 0.2s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  font-size: 22px;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 20px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require('../assets/noPosterSmall.png')\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{' '}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {\n          /* {title.length > 18 ? `${title.substring(0, 18)}...` : title} */ title\n        }\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n\nexport default Poster;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\nimport Section from '../../Components/Section';\nimport Loader from '../../Components/Loader';\nimport Message from '../../Components/Message';\nimport Poster from '../../Components/Poster';\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, popular, upComing, error, loading }) => (\n  <>\n    <Helmet>\n      <title>Movies | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"현재 상영중인 영화\">\n            {nowPlaying.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n\n        {upComing && upComing.length > 0 && (\n          <Section title=\"상영 예정 영화\">\n            {upComing.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n\n        {popular && popular.length > 0 && (\n          <Section title=\"유명한 영화\">\n            {popular.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  popular: PropTypes.array,\n  upcoming: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default HomePresenter;\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '1654a5c5d84d36b183be7edf2bd91e8c',\n    language: 'en-US',\n  },\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get('movie/now_playing'),\n  upComing: () => api.get('movie/upcoming'),\n  popular: () => api.get('movie/popular'),\n  movieDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: 'videos',\n      },\n    }),\n  movieCredit: (id) => api.get(`movie/${id}/credits`),\n  search: (term) =>\n    api.get('search/movie', {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n\nexport const tvApi = {\n  topRated: () => api.get('tv/top_rated'),\n  popular: () => api.get('tv/popular'),\n  airingToday: () => api.get('tv/airing_today'),\n  showDetail: (id) =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: 'videos',\n      },\n    }),\n  showCredit: (id) => api.get(`tv/${id}/credits`),\n  search: (term) =>\n    api.get('search/tv', {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n","import HomeContainer from './HomeContainer';\n\nexport default HomeContainer;\n","import React from 'react';\nimport HomePresenter from './HomePresenter';\nimport { moviesApi } from '../../api';\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upComing: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await moviesApi.nowPlaying();\n\n      const {\n        data: { results: upComing },\n      } = await moviesApi.upComing();\n\n      const {\n        data: { results: popular },\n      } = await moviesApi.popular();\n\n      this.setState({\n        nowPlaying,\n        upComing,\n        popular,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find movie information\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upComing, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upComing={upComing}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Section from '../../Components/Section';\nimport Loader from '../../Components/Loader';\nimport Message from '../../Components/Message';\nimport Poster from '../../Components/Poster';\nimport { Helmet } from 'react-helmet';\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, error, loading }) => (\n  <>\n    <Helmet>\n      <title>TV | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"인기있는 TV 프로그램\">\n            {topRated.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n\n        {popular && popular.length > 0 && (\n          <Section title=\"유명한 TV 프로그램\">\n            {popular.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"방영중인 TV 프로그램\">\n            {airingToday.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default TVPresenter;\n","import TVContainer from './TVContainer';\n\nexport default TVContainer;\n","import React from 'react';\nimport TVPresenter from './TVPresenter';\nimport { tvApi } from '../../api';\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday();\n\n      this.setState({\n        topRated,\n        popular,\n        airingToday,\n      });\n    } catch {\n      this.setState({\n        error: 'TV 정보를 찾을 수 없습니다.',\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, error, loading } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Loader from '../../Components/Loader';\nimport Section from '../../Components/Section';\nimport Message from '../../Components/Message';\nimport Poster from '../../Components/Poster';\nimport { Helmet } from 'react-helmet';\n\nconst Container = styled.div`\n  padding: 0px 20px;\n`;\n\nconst From = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  error,\n  loading,\n  searchTerm,\n  handleSubmit,\n  updateTerm,\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | Nomflix</title>\n    </Helmet>\n    <From onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"영화나 TV 프로그램을 검색하세요.\"\n        value={searchTerm}\n        onChange={updateTerm}\n      />\n    </From>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"영화 검색 결과\">\n            {movieResults.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV 검색 결과\">\n            {tvResults.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n        {tvResults &&\n          movieResults &&\n          tvResults.length === 0 &&\n          movieResults.length === 0 && (\n            <Message text=\"결과를 찾을 수 없습니다.\" color=\"#95a5a6\"></Message>\n          )}\n      </>\n    )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  searchTerm: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from './SearchContainer';\n\nexport default SearchContainer;\n","import React from 'react';\nimport SearchPresenter from './SearchPresenter';\nimport { moviesApi, tvApi } from '../../api';\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: '',\n    error: null,\n    loading: false,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== '') {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = (event) => {\n    const {\n      target: { value },\n    } = event;\n    this.setState({\n      searchTerm: value,\n    });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults },\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(searchTerm);\n\n      this.setState({\n        movieResults,\n        tvResults,\n      });\n    } catch {\n      this.setState({ error: '결과를 찾을 수 없습니다.' });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, error, loading } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        error={error}\n        loading={loading}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Image = styled.div`\n  margin: 0px 10px;\n  width: 140px;\n  height: 60px;\n  background: #fff;\n  opacity: 0.5;\n  background-image: url(${(props) => props.bgUrl});\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center center;\n  border-radius: 7px;\n  transition: opacity 0.3s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin: 10px 0px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Logo = ({ company }) => (\n  <ImageContainer>\n    <Image\n      bgUrl={`https://image.tmdb.org/t/p/w300/${company.logo_path}`}\n    ></Image>\n  </ImageContainer>\n);\n\nLogo.protoTypes = {\n  company: PropTypes.object.isRequired,\n};\n\nexport default Logo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Video = styled.iframe`\n  position: absolute;\n  width: 400px;\n  height: 230px;\n`;\n\nconst Trailer = ({ key, video }) => (\n  <Video src={`https://www.youtube.com/embed/${video}`} allowFullScreen></Video>\n);\n\nTrailer.propTypes = {\n  video: PropTypes.string.isRequired,\n};\n\nexport default Trailer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n`;\nconst ActorImg = styled.div`\n  width: 160px;\n  height: 240px;\n  background: #fff;\n  opacity: 0.8;\n  border-radius: 5px;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  transition: opacity 0.3s linear;\n`;\n\nconst ActorName = styled.span`\n  font-size: 18px;\n  display: block;\n  width: 160px;\n  text-align: center;\n  background: #000;\n  transition: opacity 0.3s linear;\n  opacity: 0;\n`;\n\nconst CharacterName = styled.span`\n  font-size: 18px;\n  display: block;\n  width: 160px;\n  text-align: center;\n  background: #535c68;\n  transition: opacity 0.3s linear;\n  opacity: 0;\n`;\n\nconst Actor = styled.div`\n  margin: 0px 10px;\n  &:hover {\n    ${ActorImg} {\n      opacity: 1;\n    }\n    ${ActorName} {\n      opacity: 1;\n    }\n    ${CharacterName} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Credit = ({ key, actor }) => (\n  <Container>\n    <Actor>\n      <ActorImg\n        bgImage={\n          actor.profile_path\n            ? `https://image.tmdb.org/t/p/w300${actor.profile_path}`\n            : require('../assets/noPosterSmall.png')\n        }\n      />\n      <ActorName>\n        {actor.name}\n        {console.log(actor)}\n      </ActorName>\n      <CharacterName>{actor.character}</CharacterName>\n    </Actor>\n  </Container>\n);\n\nexport default Credit;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Loader from '../../Components/Loader';\nimport { Helmet } from 'react-helmet';\nimport Logo from '../../Components/Logo';\nimport Trailer from '../../Components/Trailer';\nimport Credit from '../../Components/Credit';\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 200%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  position: relative;\n  z-index: 1;\n`;\n\nconst Cover = styled.div`\n  width: 40%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  border-radius: 5px;\n  margin-right: 20px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst TitleAndLinkContainer = styled.div`\n  display: flex;\n`;\n\nconst Title = styled.h3`\n  font-size: 40px;\n  margin-right: 20px;\n  margin-bottom: 10px;\n`;\n\nconst IMDBLink = styled.a`\n  width: 80px;\n  height: 40px;\n  display: block;\n  background-image: url('https://upload.wikimedia.org/wikipedia/commons/6/69/IMDB_Logo_2016.svg');\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center center;\n`;\nconst ItemContainer = styled.div`\n  margin: 20px 0px;\n`;\n\nconst Item = styled.span`\n  font-size: 22px;\n`;\n\nconst Divider = styled.span`\n  font-size: 15px;\n  margin: 0px 10px;\n  font-weight: 900;\n`;\n\nconst Overview = styled.p`\n  font-size: 18px;\n  opacity: 0.9;\n  line-height: 1.8;\n  width: 70%;\n`;\n\nconst LogoContainer = styled.div`\n  margin: 20px 0px;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n`;\n\nconst VideoContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 230px;\n  padding-bottom: 20%;\n  margin-right: 450px;\n`;\n\nconst VideosContainer = styled.div`\n  margin-top: 40px;\n  display: flex;\n  overflow: auto;\n  &::-webkit-scrollbar {\n    width: 10px;\n  }\n  &::-webkit-scrollbar-thumb {\n    background-color: #2f3542;\n    border-radius: 10px;\n    background-clip: padding-box;\n    border: 2px solid transparent;\n  }\n  &::-webkit-scrollbar-track {\n    background-color: grey;\n    border-radius: 10px;\n    box-shadow: inset 0px 0px 5px white;\n  }\n`;\n\nconst ActorsContainer = styled.div`\n  margin: 20px 0px;\n  width: 100%;\n  height: 330px;\n  display: grid;\n  grid-template-rows: repeat(1, 240px);\n  grid-template-columns: repeat(100, 1fr);\n  overflow: auto;\n  &::-webkit-scrollbar {\n    width: 10px;\n  }\n  &::-webkit-scrollbar-thumb {\n    background-color: #2f3542;\n    border-radius: 10px;\n    background-clip: padding-box;\n    border: 2px solid transparent;\n  }\n  &::-webkit-scrollbar-track {\n    background-color: grey;\n    border-radius: 10px;\n    box-shadow: inset 0px 0px 5px white;\n  }\n`;\n\nconst DetailPresenter = ({ key, result, credits, error, loading }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading... | Nomflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}\n          | Nomflix\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require('../../assets/noPosterSmall.png')\n          }\n        />\n        <Data>\n          <TitleAndLinkContainer>\n            <Title>\n              {result.original_title\n                ? result.original_title\n                : result.original_name}\n            </Title>\n            <IMDBLink\n              href={`https://imdb.com/title/${result.imdb_id}`}\n            ></IMDBLink>\n          </TitleAndLinkContainer>\n\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>·</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time}min\n            </Item>\n            <Divider>·</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `,\n                )}\n            </Item>\n          </ItemContainer>\n          <LogoContainer>\n            {result.production_companies &&\n              result.production_companies\n                .filter((company) => {\n                  return company.logo_path !== null;\n                })\n                .map((company) => <Logo key={company.id} company={company} />)}\n          </LogoContainer>\n          <Overview>{result.overview}</Overview>\n          <ActorsContainer>\n            {credits.cast.map((actor) => (\n              <Credit actor={actor}></Credit>\n            ))}\n          </ActorsContainer>\n          <VideosContainer>\n            {result.videos.results &&\n              result.videos.results.map((result, index) => (\n                <VideoContainer key={result.id}>\n                  <Trailer key={result.id} video={result.key} />\n                </VideoContainer>\n              ))}\n          </VideosContainer>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default DetailPresenter;\n","import DetailContainer from './DetailContainer';\n\nexport default DetailContainer;\n","import React from 'react';\nimport DetailPresenter from './DetailPresenter';\nimport { moviesApi, tvApi } from '../../api';\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname },\n    } = props;\n    this.state = {\n      result: null,\n      credits: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes('/movie/'),\n    };\n  }\n\n  async componentDidMount() {\n    // find a id & path from router\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props;\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push('/');\n    }\n\n    //Search Movie or TV\n    let result = null;\n    let credits = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n        ({ data: credits } = await moviesApi.movieCredit(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n        ({ data: credits } = await tvApi.showCredit(parsedId));\n      }\n    } catch {\n      this.setState({ error: '결과를 찾을 수 없습니다.' });\n    } finally {\n      this.setState({ loading: false, result, credits });\n    }\n  }\n  render() {\n    const { result, credits, error, loading } = this.state;\n    return (\n      <DetailPresenter\n        result={result}\n        credits={credits}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Header = styled.header`\n  color: #fff;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${(props) => (props.current ? '#3498db' : 'transparent')};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 18px;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === '/'}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === '/tv'}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === '/search'}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\nimport Home from 'Routes/Home';\nimport TV from 'Routes/TV';\nimport Search from 'Routes/Search';\nimport Detail from 'Routes/Detail';\nimport Header from 'Components/Header';\n\nexport default () => (\n  <Router>\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/tv\" component={TV} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/show/:id\" component={Detail} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  </Router>\n);\n","import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a {\n        text-decoration: none;\n        color:inherit;\n    }\n    * {\n        box-sizing: border-box;\n    }\n    body {\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size: 12px;\n        background-color: rgba(20, 20, 20, 1);\n        color:#fff;\n        padding-top:50px;\n    }\n\n`;\n\nexport default globalStyles;\n","import React, { Component } from 'react';\nimport Router from 'Components/Router';\nimport GlobalStyles from 'Components/GlobalStyles';\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}